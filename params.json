{"name":"E-learning-server","tagline":"無所不在學習架構與學習導引機制-後端伺服器","body":"後端伺服器\r\n=======================\r\n## 簡介\r\n主要的東西都放在Server那邊，處理手機客戶端與伺服器資料的溝通。\r\n\r\n包含每位學生的學習資料、場地狀況、學習教材。以及處理學習路徑規劃。\r\n\r\n## 系統需求\r\n* PHP5.3 以上，需要有以下Extension:\r\n    * pdo_mysql\r\n    * zip\r\n* MariaDB 5.5.31 (可用MySQL)\r\n\r\n## 開發文件\r\n已將整份專案使用[PHPDocumentor](http://www.phpdoc.org/)產生出[開發文件網站](docs/apidocs/index.html)\r\n\r\n## 拷貝專案\r\n1. `$ git clone git@github.com:CHU-TDAP/E-learning-Server.git`\r\n\r\n        Cloning into 'E-learning-Server'...\r\n        remote: Counting objects: 2275, done.\r\n        remote: Compressing objects: 100% (820/820), done.\r\n        remote: Total 2275 (delta 1503), reused 2164 (delta 1393)\r\n        Receiving objects: 100% (2275/2275), 682.27 KiB | 89.00 KiB/s, done.\r\n        Resolving deltas: 100% (1503/1503), done.\r\n        Checking connectivity... done\r\n    \r\n2. `$ cd E-learning-Server`\r\n        \r\n3. `$ git submodule init`\r\n\r\n        Submodule 'htdocs/Material' (git@github.com:CHU-TDAP/E-learning-material.git) registered for path 'htdocs/Material'\r\n\r\n4. `$ git submodule update`\r\n\r\n        Cloning into 'htdocs/Material'...\r\n        remote: Counting objects: 322, done.\r\n        remote: Compressing objects: 100% (261/261), done.\r\n        remote: Total 322 (delta 143), reused 220 (delta 44)\r\n        Receiving objects: 100% (322/322), 26.76 MiB | 76.00 KiB/s, done.\r\n        Resolving deltas: 100% (143/143), done.\r\n        Checking connectivity... done\r\n        Submodule path 'htdocs/Material': checked out 'aff4987f61755f0f66fe1bf382b4a3250f080344'\r\n        \r\n## 架設到你自己的伺服器\r\n### Apache\r\n編輯以下文件:\r\n\r\n* ArchLinux: `/etc/httpd/conf/extra/httpd-vhosts.conf`\r\n* Ubuntu: `/etc/apache2/sites-available/chu-elearning.conf`\r\n\r\n加入以下內容:\r\n\r\n    # Chu E-learning Website\r\n    <VirtualHost *:80>\r\n        ServerName chu-elearning.yourdomain.name\r\n        ServerAdmin admin@yourdomain.name\r\n        \r\n        DocumentRoot /srv/http/website/chu-elearning/htdocs\r\n        DirectoryIndex index.php index.shtml index.html\r\n    </VirtualHost>\r\n    <Directory /srv/http/website/chu-elearning/htdocs/>\r\n        Options FollowSymLinks MultiViews\r\n        AllowOverride All\r\n        Allow from All\r\n        Order allow,deny\r\n        Require all granted\r\n    </Directory>\r\n\r\n啟用本站/重新啟動伺服器:\r\n\r\n* ArchLinux: `$ sudo systemctl restart httpd.service`\r\n* Ubuntu:\r\n    1. `$ sudo a2ensite chu-elearning`\r\n    2. `$ sudo /etc/init.d/apache2 restart`\r\n\r\n## 如何安裝\r\n### 引導式安裝\r\n\r\n安裝前請先把`/htdocs/config.php`、`/htdocs/config/db_config.php`砍掉，若之前有安裝過，請砍掉之前安裝的資料庫\r\n\r\n1. 請先把`/htdocs/` 整個複製到你的網頁空間\r\n2. 設定你的網頁伺服器、資料夾權限，允許由網頁伺服器建立檔案（此步可略過，但安裝完後請手動建立安裝完成畫面提到的檔案）\r\n3. 打開你的瀏覽器，網址輸入 http://你的網站/install/ 進行安裝，接下來就按照畫面的提示去做\r\n4. 安裝完後，為了增加安全性，請刪除`/htdocs/install/`整個資料夾。\r\n\r\n### 手動安裝\r\n1. 請先把 `/htdocs/` 整個複製到你的網頁空間\r\n2. 將內附的 `chu-elearn.sql` 匯入進你的資料庫\r\n3. 將 `/sample_config/htdocs/config.php` 檔案挪到 `/htdocs/config.php` ，並依你的需求修改。\r\n4. 將 `/sample_config/htdocs/config/db_config.php` 檔案挪到 `/htdocs/config/db_config.php` 檔案，並依你的資料庫狀況修改。\r\n\r\n\r\n## 本站採用的Framework\r\n### 網頁前端（含後台管理介面）\r\n* Bootstrap Version 2.3.2\r\n* JQuery v1.10.2\r\n\r\n\r\n## 修改紀錄\r\n* 2013.11.25\r\n    * 新增教材打包下載的功能\r\n* 2013.11.9\r\n    * 更改API輸出ID: logincode -> ucode\r\n* 2013.10.1\r\n    * API架構調整\r\n* 2013.9.16\r\n    * **架構調整:** 使用者類別的更改密碼功能拿掉確認密碼的驗證（lib是內部用的函式庫，確認密碼判斷應在界面部份就判斷好）\r\n    * 使用者管理頁面功能實作\r\n* 2013.9.11\r\n    * **架構調整:** 拆分成User, MyUser類別，主要差別是一個是輸入使用者名稱，另一個是輸入登入碼\r\n* 2013.9.4\r\n    * add 網站管理功能\r\n* 2013.8.27\r\n    * add 更改使用者至某使用者群組\r\n    * lib/function/user.php 函式庫再細分成user_admin.php\r\n    * 新增網站更新按鈕\r\n* 2013.8.26\r\n    * (規劃調整) **將htdoc/lib/ 裡的所有檔案，再次細分成function, class這兩個子資料夾**\r\n* 2013.8.21\r\n    * 網頁部份的模組化通知類別\r\n    * 改變資料庫密碼長度（改為40），以及新增SHA1, CRYPT加密方式\r\n    * 修正install在Windows下的編碼問題，並將config.php設定檔挪出\r\n* 2013.8.20\r\n    * 後端伺服器的所有資料表及欄位名稱都加上\"chu\"字首，新稱\"使用者實體\"裡的屬性欄位\r\n    * 後端伺服器的所有欄位名稱都去掉\"chu\"字首（不然會增加操作SQL的麻煩）\r\n    * **後端伺服器資料庫的使用者按照當天討論的結果修改，並將所有對應的函式庫、網頁整合**\r\n* 2013.8.18\r\n    * 使用者群組清單\r\n* 2013.8.14\r\n    * 將原本使用的mysql專用函式，全部由PDO取代，** 不再使用mysql專用函式 **\r\n    * 更名admin/* 所有使用者帳號相關網頁: account->user\r\n    * 新增使用者管理網頁美化\r\n* 2013.8.12\r\n    * Table Name : student 改成 user, 按照ER圖設計\r\n* 2013.8.8\r\n    * 修改SQL檔成專題的後端資料庫，基本上是從第25行開始全部改掉了\r\n* 2013.8.2\r\n    * **架構調整: 利用登入碼針對此帳號操作獨立成User類別**，原`lib/user.php`裡利用登入碼操作的函式將逐漸被User類別取代\r\n    * **對此使用者（登入碼）的資料庫操作，移到`lib/sql.php`**\r\n    * **更改資料庫users資料表欄位: name->realname**\r\n    * User類別: 實作多個函式\r\n* 2013.8.1\r\n    * 改名為`assets/js/jquery.min.js`，並將所有網頁有用到jquery的更改對應路徑\r\n    * **資料庫調整: 更改users欄位名稱group->user_uroup** (因為會和MySQL的保留字衝到)\r\n    * userGroup: 新增 建立群組 函式功能\r\n    * **架構調整: 將lib/user.php的使用者群組相關移出成lib/userGroup.php，並修改相對應的函式名稱**\r\n    * 完成系統安裝流程: 可進入`htdocs/install/install.php`進行安裝\r\n* 2013.7.31\r\n    * **(有調整user api函式)新增使用者群組功能**\r\n* 2013.7.27\r\n    * 使用者帳號建立功能\r\n* 2013.7.26\r\n    * README.md: 加入\"如何安裝\"\r\n    * 建立後台管理介面！（使用Bootstrap套版）\r\n    * 後台管理介面- 使用者列表\r\n* 2013.7.25\r\n    * **更改users資料表的欄位登入碼為`login_code`**\r\n    * 完成登入、登出函式\r\n    * 修正加密函式（避免和HTML、PHP字元衝到）\r\n* 2013.7.24\r\n    * 架構調整\r\n    * 做出測試用的account_list.php網頁\r\n    * 加密函式（目前只提供MD5）\r\n* 2013.7.23\r\n    * 架構調整\r\n    * 建立Git repository\r\n* 更久以前...\r\n    * 建立初步架構\r\n\r\n## 部份資源來源\r\n\r\n* /htdocs/lib/password.php 的`generatorText($password_len)`函式\r\n    * 原作者: [Tsung-Hao Lee](http://about.me/tsung)\r\n    * 來源: <http://blog.longwin.com.tw/2007/08/php_function_gen_password_2007/>  \r\n* 網站介面套版 Bootstrap\r\n    * 網站: <http://twitter.github.io/bootstrap/index.html>\r\n    * Github: <http://github.com/twitter/bootstrap>\r\n* JQuery\r\n    * 網站: <http://jquery.com/>\r\n    * Github: <http://github.com/jquery/jquery>\r\n\r\n## 關於\r\n* 主要連結 <https://github.com/organizations/CHU-TDAP> \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}